-bash-4.1$ svn diff
Index: command_line/postrefine.py
===================================================================
--- command_line/postrefine.py  (revision 21836)
+++ command_line/postrefine.py  (working copy)
@@ -32,7 +32,7 @@
 def postrefine_by_frame_mproc(frame_no, frame_files, iparams, miller_array_ref, pres_results, avg_mode):
   from prime.postrefine import postref_handler
   prh = postref_handler()
-  if pres_results is None:
+  if len(pres_results) == 0:
     pres_in = None
   else:
     pres_in = pres_results[frame_no]
@@ -298,7 +298,7 @@
   n_iters = iparams.n_postref_cycle
   txt_merge_postref = ''
   postrefine_by_frame_result = None
-  postrefine_by_frame_pres_list = None
+  postrefine_by_frame_pres_list = []
   for i in range(n_iters):
     miller_array_ref = miller_array_ref.generate_bijvoet_mates()
     if i == (n_iters-1):
@@ -323,14 +323,16 @@
             func=postrefine_by_frame_mproc_wrapper,
             processes=iparams.n_processors)

-    postrefine_by_frame_pres_list = [postrefine_by_frame_tuple[0] for postrefine_by_frame_tuple in postrefine_by_frame_result]
-
     postrefine_by_frame_good = []
     for results in postrefine_by_frame_result:
       if results is not None:
         pres, txt_out_result = results
+        postrefine_by_frame_pres_list.append(pres)
         if pres is not None:
           postrefine_by_frame_good.append(pres)
+      else:
+        postrefine_by_frame_pres_list.append(None)
+

     if len(postrefine_by_frame_good) > 0:

Index: postrefine/mod_util.py
===================================================================
--- postrefine/mod_util.py      (revision 21836)
+++ postrefine/mod_util.py      (working copy)
@@ -31,8 +31,6 @@
                      p_set, rs_set, wavelength_set, sin_theta_over_lambda_sq, SE, avg_mode,
                      iparams, pickle_filename_set):

-    print "Averaging", miller_index
-
     if avg_mode == 'average':
       sigma_max = 99
     else:
Index: postrefine/postrefine.py
===================================================================
--- postrefine/postrefine.py    (revision 21836)
+++ postrefine/postrefine.py    (working copy)
@@ -276,8 +276,8 @@

     #4. Do least-squares refinement
     lsqrh = leastsqr_handler()
-    #try:
-    refined_params, stats, n_refl_postrefined = lsqrh.optimize(I_ref_match,
+    try:
+      refined_params, stats, n_refl_postrefined = lsqrh.optimize(I_ref_match,
                                                                    observations_original_sel, wavelength,
                                                                    crystal_init_orientation, alpha_angle_set,
                                                                    spot_pred_x_mm_set, spot_pred_y_mm_set,
@@ -285,8 +285,8 @@
                                                                    pres_in,
                                                                    observations_non_polar_sel,
                                                                    detector_distance_mm)
-    #except Exception:
-    #  return None, 'Optimization failed. '+pickle_filepaths[len(pickle_filepaths)-1]
+    except Exception:
+      return None, 'Optimization failed. '+pickle_filepaths[len(pickle_filepaths)-1]

     #caculate partiality for output (with target_anomalous check)
     G_fin, B_fin, rotx_fin, roty_fin, ry_fin, rz_fin, r0_fin, re_fin, \
